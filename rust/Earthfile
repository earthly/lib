VERSION 0.7

# CARGO runs the cargo command "cargo $args".
# This UDC should be thread safe. Parallel builds of targets using it should be free of race conditions.
# Arguments:
#   - args: Cargo subcommand and its arguments. Required
#   - keep_fingerprints (false): Do not remove source packages fingerprints. Use only when source packages have been COPYed with --keep-ts option
#   - output: Regex to match the files within the target folder to be copied from the cache to the caller filesystem (image layers).
#     Use this argument when you want to SAVE an ARTIFACT from the target folder (mounted cache), always trying to minimize the total size of the copied fileset.
#     For example --output="release/[^\./]+" would keep all the files in /target/release that don't have any extension
CARGO:
    COMMAND
    ARG --required args
    ARG keep_fingerprints=false
    ARG output
    IF [ "$keep_fingerprints" = "false" ]
       DO +REMOVE_SOURCE_FINGERPRINTS
    END
    RUN --mount=type=cache,mode=0777,sharing=shared,target=$CARGO_HOME/registry \
        --mount=type=cache,mode=0777,sharing=shared,target=$CARGO_HOME/git \
        --mount=type=cache,mode=0777,target=target \
        cargo $args; \
        if [ -n "$output" ]; then \
          mkdir /earthly_lib_rust_temp; \
          cd target; \
          find . -type f -regextype posix-egrep -regex "./$output" -exec cp --parents \{\} /earthly_lib_rust_temp \; ; \
        fi
    IF [ "$output" != "" ]
      RUN mkdir -p target; \
          mv /earthly_lib_rust_temp/* target 2>/dev/null || echo "no files found within ./target matching the provided output regexp" ;
    END

# REMOVE_SOURCE_FINGERPRINTS removes the Cargo fingerprint folders of the source packages.
# This guarantees Cargo compiles the packages when COPY commands of the source folders have a static timestamp (see --keep-ts)
REMOVE_SOURCE_FINGERPRINTS:
    COMMAND
    COPY +get-stoml/stoml /tmp/stoml
    ARG source_libs=$(find . -name Cargo.toml -exec bash -c '/tmp/stoml {} package.name; printf "\n"' \\;)
    RUN --mount=type=cache,mode=0777,sharing=shared,target=target \
      find target -name .fingerprint; \
      fingerprint_folders=$(find target -name .fingerprint) ; \
      for fingerprint_folder in $fingerprint_folders; do \
        cd $fingerprint_folder; \
        for source_lib in $source_libs; do \
          find . -maxdepth 1 -regex "\./$source_lib-[^-]+" -exec rm -rf {} \; ;\
        done \
      done

# get-stoml gets the portable stoml binary
get-stoml:
    FROM alpine:3.18.3
    RUN wget -O stoml https://github.com/freshautomations/stoml/releases/download/v0.7.1/stoml_linux_amd64; \
       chmod +x stoml
    SAVE ARTIFACT ./stoml stoml
